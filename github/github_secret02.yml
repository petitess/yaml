name: 'Generate Gh Token'

on:
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  security-events: write
  actions: write

jobs:
  jwt:
    name: 'Generate Github Token'
    runs-on: windows
    outputs:
      SUPER: ${{ steps.ght.outputs.GHT }}
    strategy:
      fail-fast: false
      matrix:
        environment:
          - dev

    defaults:
      run:
        shell: pwsh
        working-directory: ${{github.workspace}}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - uses: sersoft-gmbh/setup-gh-cli-action@v2
      with:
        version: stable

    - name: 'Generate Jwt Token'
      shell: pwsh
      id: gen_jwt
      run: |
        $client_id = "${{ vars.GH_APP_ID }}"
        $private_key_path = "${{ secrets.GH_APP_PEM }}"

        $header = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes((ConvertTo-Json -InputObject @{
        alg = "RS256"
        typ = "JWT"
        }))).TrimEnd('=').Replace('+', '-').Replace('/', '_');

        $payload = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes((ConvertTo-Json -InputObject @{
        iat = [System.DateTimeOffset]::UtcNow.AddSeconds(-10).ToUnixTimeSeconds()
        exp = [System.DateTimeOffset]::UtcNow.AddMinutes(10).ToUnixTimeSeconds()
        iss = $client_id 
        }))).TrimEnd('=').Replace('+', '-').Replace('/', '_');

        $rsa = [System.Security.Cryptography.RSA]::Create()
        $rsa.ImportFromPem($private_key_path)

        $signature = [Convert]::ToBase64String($rsa.SignData([System.Text.Encoding]::UTF8.GetBytes("$header.$payload"), [System.Security.Cryptography.HashAlgorithmName]::SHA256, [System.Security.Cryptography.RSASignaturePadding]::Pkcs1)).TrimEnd('=').Replace('+', '-').Replace('/', '_')
        $jwt = "$header.$payload.$signature"
        Write-Host $jwt.Substring(0,25)
        "JWT=$jwt" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
        echo "::add-mask::$($jwt.Substring(3, 55))"

    - name: 'Get installation id'
      shell: pwsh
      id: inst_id 
      run: |
        $JwtToken = "${{ steps.gen_jwt.outputs.JWT }}"
        $URL = "https://api.github.com/app/installations"
        $headers = @{
            "Authorization"        = "Bearer $JwtToken"
            "Accept"               = "application/vnd.github+json"
            "X-GitHub-Api-Version" = "2022-11-28"
        }
        $InsId = (Invoke-RestMethod -Method GET -URI $URL -Headers $headers).id
        Write-Host $InsId
        "INST_ID=$InsId" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

    - name: 'Get Github Token'
      shell: pwsh
      id: ght
      run: |
        $JwtToken = "${{ steps.gen_jwt.outputs.JWT }}"
        $Id = ${{ steps.inst_id.outputs.INST_ID }}
        $URL = "https://api.github.com/app/installations/$Id/access_tokens"
        $headers = @{
            "Authorization"        = "Bearer $JwtToken"
            "Accept"               = "application/vnd.github+json"
            "X-GitHub-Api-Version" = "2022-11-28"
        }
        $GhToken = (Invoke-RestMethod -Method POST -URI $URL -Headers $headers).token
        "GHT=$GhToken" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

    - name: 'Get Github repo'
      shell: pwsh
      id: repo
      if: false
      run: |
        $Token = "${{ secrets.GITHUB_TOKEN }}"
        $URL = "https://api.github.com/orgs/001-MY-ORG/repos"
        $headers = @{
            "Authorization"        = "Bearer $Token"
            "Accept"               = "application/vnd.github+json"
            "X-GitHub-Api-Version" = "2022-11-28"
            "User-Agent"           = "user"
        }
        $Repos = Invoke-RestMethod -Method GET -URI $URL -Headers $headers
        $Repos.name

    - name: 'Get Public Key'
      shell: pwsh
      id: key
      run: |
        $Token = "${{ steps.ght.outputs.GHT }}"
        $URL = "https://api.github.com/repos/001-MY-ORG/abcs-analytics-common-func/actions/secrets/public-key"
        $headers = @{
            "Authorization"        = "Bearer $Token"
            "Accept"               = "application/vnd.github+json"
            "X-GitHub-Api-Version" = "2022-11-28"
            "User-Agent"           = "user"
        }
        $Key = (Invoke-RestMethod -Method GET -URI $URL -Headers $headers).key
        $KeyId = (Invoke-RestMethod -Method GET -URI $URL -Headers $headers).key_id
        "KEY=$Key" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
        "KEYID=$KeyId" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
        Write-Host $KeyId.Substring(0, 5)

    - name: 'save Github Token'
      shell: pwsh
      env:
        GH_TOKEN: ${{ steps.ght.outputs.GHT }}
      run: |
        git config --global --add safe.directory D:/action-runner-common-func/_work/abcs-analytics-common-func/abcs-analytics-common-func
        gh secret set GH_TOKEN --body "${{ steps.ght.outputs.GHT }}"
