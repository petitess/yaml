name: 'Databricks'

on:
  workflow_dispatch:
  push:
  # schedule:
  #   - cron:  '0 3 * * *'

env:
  ARM_CLIENT_ID: '531e811a-bf3f-486b-99a2-3eab3f268e54' ## ${{ vars.CLIENT_ID }}  
  ARM_USE_OIDC: true
  ARM_SUBSCRIPTION_ID: '0dcc13b7-1a10-483e-95aa-fe7e71802e2e' # ${{ vars.SUBSCRIPTION_ID }} 
  ARM_TENANT_ID: '7d5e28a9-aa48-43c6-a39a-3fc5167644de' # ${{ vars.TENANT_ID }}
  TFSTATE_STORAGE : 'stabcdefault01' # ${{ vars.TFSTATE_STORAGE }}

permissions:
  contents: write
  pages: write
  id-token: write  

jobs:
  terraform_build_and_plan:
    name: 'Terraform Build & Plan'
    runs-on: ubuntu-latest
    environment: ${{ matrix.environment }}
    strategy: 
      fail-fast: false
      matrix:
          environment:
              - dev
              #- stg

    defaults:
      run:
        shell: bash
        working-directory: ${{github.workspace}}/databricks

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Azure login
      uses: azure/login@v2
      with:
        client-id: ${{env.ARM_CLIENT_ID}}
        tenant-id: ${{env.ARM_TENANT_ID}}
        subscription-id: ${{env.ARM_SUBSCRIPTION_ID}}

    - name: Plan
      shell: pwsh
      run: |
        .\init-plan.ps1 ${{ matrix.environment }}

  terraform_apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    strategy: 
      fail-fast: false
      matrix:
          environment:
              - dev
    environment: ${{ matrix.environment }}
    needs: [terraform_build_and_plan]

    defaults:
      run:
        shell: bash
        working-directory: ${{github.workspace}}/databricks

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Azure login
      uses: azure/login@v2
      with:
        client-id: ${{env.ARM_CLIENT_ID}}
        tenant-id: ${{env.ARM_TENANT_ID}}
        subscription-id: ${{env.ARM_SUBSCRIPTION_ID}}
    
    - name: Plan
      shell: pwsh
      run: |
        .\init-apply.ps1 ${{ matrix.environment }}
