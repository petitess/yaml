name: "Windows Runner"

on:
  workflow_dispatch:
  #push:
  # schedule:
  #   - cron:  '0 3 * * *'

env:
  ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
  ARM_USE_OIDC: true
  ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
  TFSTATE_STORAGE: ${{ vars.TFSTATE_STORAGE }}

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  terraform_build_and_plan:
    name: "Terraform Build & Plan"
    runs-on: self-hosted #ubuntu-latest
    environment: ${{ matrix.environment }}
    strategy:
      fail-fast: false
      matrix:
        environment:
          - dev
          #- stg

    # defaults:
    #   run:
    #     #shell: pwsh
    #     working-directory: ${{github.workspace}}/terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        ######
        #Configure federated credentials
    #- uses: pietrobolcato/install-azure-cli-action@main
        ######
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{env.ARM_CLIENT_ID}}
          tenant-id: ${{env.ARM_TENANT_ID}}
          subscription-id: ${{env.ARM_SUBSCRIPTION_ID}}
      
      - name: Get Folder
        shell: powershell
        run: |
          Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope CurrentUser
          Get-ChildItem

      - name: Plan
        shell: pwsh
        run: |
          .\init-plan.ps1 ${{ matrix.environment }}

      - name: Get Folder
        shell: pwsh
        run: |
          Get-ChildItem

  # terraform_apply:
  #   name: 'Terraform Apply'
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #         environment:
  #             - dev
  #             #- stg

  #   environment: ${{ matrix.environment }}
  #   needs: [terraform_build_and_plan]

  #   defaults:
  #     run:
  #       shell: bash
  #       working-directory: ${{github.workspace}}/databricks

  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3

  #   - name: Azure login
  #     uses: azure/login@v2
  #     with:
  #       client-id: ${{env.ARM_CLIENT_ID}}
  #       tenant-id: ${{env.ARM_TENANT_ID}}
  #       subscription-id: ${{env.ARM_SUBSCRIPTION_ID}}

  #   - name: Plan
  #     shell: pwsh
  #     run: |
  #       .\init-apply.ps1 ${{ matrix.environment }}
