name: 'TF Pipeline'

on:
  workflow_dispatch:
  # schedule:
  #   - cron:  '0 3 * * *'

env:
  ARM_CLIENT_ID: ${{ vars.CLIENT_ID }}  
  ARM_USE_OIDC: true
  ARM_SUBSCRIPTION_ID: ${{ vars.SUBSCRIPTION_ID }} 
  ARM_TENANT_ID: ${{ vars.TENANT_ID }}
  TFSTATE_STORAGE :  ${{ vars.TFSTATE_STORAGE }}

permissions:
  contents: write
  pages: write
  id-token: write  

jobs:
  terraform_build_and_plan:
    name: 'Terraform Build & Plan'
    runs-on: ubuntu-latest
    environment: ${{ matrix.environment }}
    strategy: 
      fail-fast: false
      matrix:
          environment:
              - dev
              #- utv

    defaults:
      run:
        shell: bash
        working-directory: ${{github.workspace}}/terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    # - uses: actions/setup-node@v3
    #   with:
    #     node-version: '16'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ~1.8.0

    - name: Terraform Init
      run: |
        terraform init                                                                         \
        -backend-config="storage_account_name=${{ env.TFSTATE_STORAGE }}"        
        
    - name: Terraform Validate
      run: terraform validate
      
    - name: Terraform Plan
      id: tf_plan
      run: |
        terraform plan \
        -var='client_id=${{env.ARM_CLIENT_ID}}' \
        -var='tenant_id=${{env.ARM_TENANT_ID}}' \
        -var='sub_id=${{env.ARM_SUBSCRIPTION_ID}}' \
        -var='env=${{matrix.environment}}' \

  terraform_apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    strategy: 
      fail-fast: false
      matrix:
          environment:
              - dev
    environment: ${{ matrix.environment }}
    needs: [terraform_build_and_plan]
    if: github.ref == 'refs/heads/main' && github.event_name != 'schedule'

    defaults:
      run:
        shell: bash
        working-directory: ${{github.workspace}}/terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    # - uses: actions/setup-node@v3
    #   with:
    #     node-version: '16'
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ~1.8.0
    
    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="storage_account_name=${{ env.TFSTATE_STORAGE }}"
    
    - name: Terraform Apply
      run: |
        terraform apply -parallelism=100 \
          -var='client_id=${{env.ARM_CLIENT_ID}}' \
          -var='tenant_id=${{env.ARM_TENANT_ID}}' \
          -var='sub_id=${{env.ARM_SUBSCRIPTION_ID}}' \
          -var='env=${{matrix.environment}}' \
          -auto-approve
